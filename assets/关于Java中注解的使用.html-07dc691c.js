const t=JSON.parse('{"key":"v-7a2aa64c","path":"/posts/%E5%85%B3%E4%BA%8EJava%E4%B8%AD%E6%B3%A8%E8%A7%A3%E7%9A%84%E4%BD%BF%E7%94%A8.html","title":"关于Java中注解的使用","lang":"zh-CN","frontmatter":{"title":"关于Java中注解的使用","date":"2023-03-16T00:00:00.000Z","category":["JavaSE"],"tag":["学习笔记"],"description":"一、注解的概述 注解(Annotation)，也叫元数据，是一种代码级别的说明，可以在程序中设定标记，这些标记可以用于检查代码、生成文档、使用反射等。 简单来说,注解是一种将meta标记(meta-tag)与程序元素关联的机制,允许编译器(compiler)或JVM从有注解的元素提取程序行为,必要时生成相互依赖的代码。 注解可以在包、类、方法、字段、局部变量、方法参数等几乎所有的东西前面声明，声明方法是 ‘@注解名’ 。后面还可添加参数。 1.1、注解的种类 注解分为两种，一种是预设注解，由Java原生提供的注解类型，另一种是元注解，用来定义注解的注解，常常用来自定义其他注解","head":[["meta",{"property":"og:url","content":"https://wuiyan.github.io/posts/%E5%85%B3%E4%BA%8EJava%E4%B8%AD%E6%B3%A8%E8%A7%A3%E7%9A%84%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"WUYAN的博客"}],["meta",{"property":"og:title","content":"关于Java中注解的使用"}],["meta",{"property":"og:description","content":"一、注解的概述 注解(Annotation)，也叫元数据，是一种代码级别的说明，可以在程序中设定标记，这些标记可以用于检查代码、生成文档、使用反射等。 简单来说,注解是一种将meta标记(meta-tag)与程序元素关联的机制,允许编译器(compiler)或JVM从有注解的元素提取程序行为,必要时生成相互依赖的代码。 注解可以在包、类、方法、字段、局部变量、方法参数等几乎所有的东西前面声明，声明方法是 ‘@注解名’ 。后面还可添加参数。 1.1、注解的种类 注解分为两种，一种是预设注解，由Java原生提供的注解类型，另一种是元注解，用来定义注解的注解，常常用来自定义其他注解"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-10T07:41:01.000Z"}],["meta",{"property":"article:author","content":"WUYAN"}],["meta",{"property":"article:tag","content":"学习笔记"}],["meta",{"property":"article:published_time","content":"2023-03-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-10T07:41:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"关于Java中注解的使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-16T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-10T07:41:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WUYAN\\",\\"url\\":\\"https://wuiyan.github.io/\\"}]}"]]},"headers":[],"git":{"createdTime":1739173261000,"updatedTime":1739173261000,"contributors":[{"name":"wuiyan","email":"jia2997592709@163.com","commits":1}]},"readingTime":{"minutes":3.18,"words":953},"filePathRelative":"posts/关于Java中注解的使用.md","localizedDate":"2023年3月16日","excerpt":"<h4> 一、注解的概述</h4>\\n<p>注解(Annotation)，也叫元数据，是一种代码级别的说明，可以在程序中设定标记，这些标记可以用于检查代码、生成文档、使用反射等。</p>\\n<p>简单来说,注解是一种将meta标记(meta-tag)与程序元素关联的机制,允许编译器(compiler)或JVM从有注解的元素提取程序行为,必要时生成相互依赖的代码。</p>\\n<p>注解可以在包、类、方法、字段、局部变量、方法参数等几乎所有的东西前面声明，声明方法是 ‘@注解名’ 。后面还可添加参数。</p>\\n<h6> 1.1、注解的种类</h6>\\n<p>注解分为两种，一种是预设注解，由Java原生提供的注解类型，另一种是元注解，用来定义注解的注解，常常用来自定义其他注解</p>","autoDesc":true}');export{t as data};
