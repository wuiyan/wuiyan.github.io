import{_ as a,Y as n,Z as s,a4 as e}from"./framework-17eb0294.js";const t={},o=e(`<h3 id="格式说明" tabindex="-1"><a class="header-anchor" href="#格式说明" aria-hidden="true">#</a> 格式说明</h3><p>在Java中表示日期和时间格式时，通常采用英文缩写的方式来对于日期和时间进行显示或解析，不同的英文字母表示的含义各不相同，甚至在一些日期或时间的表示位置上大小写不同也会导致结果出现变化，下面是关于日期时间格式显示和解析的总结。</p><blockquote><p>基准形式：<code>年-月-日 时:分:秒</code> 表示形式：<code>yyyy-MM-dd hh:mm:ss</code></p></blockquote><p>日期时间格式有多种多样的表示方式，对于不同的定义或类库都有不同的实现，本文的描述是基于上述较为常用的形式来进行探讨和总结。</p><h3 id="日期格式" tabindex="-1"><a class="header-anchor" href="#日期格式" aria-hidden="true">#</a> 日期格式</h3><h5 id="年-year-使用-y-或者-y-表示" tabindex="-1"><a class="header-anchor" href="#年-year-使用-y-或者-y-表示" aria-hidden="true">#</a> 年（Year）：使用 Y 或者 y 表示</h5><ul><li>Y：表示周年，周年是以周来进行计算的单位，通常与周数一同使用，表示当前周处于哪一年，适用于出现一个周跨两个年的情况，此时会根据当前周的大部分日子属于哪一年来判断此周属于哪一年</li><li>y：表示日历年，即实际使用的年份，通常使用的便是这种形式</li></ul><h5 id="月-month-使用-m-表示" tabindex="-1"><a class="header-anchor" href="#月-month-使用-m-表示" aria-hidden="true">#</a> 月（Month）：使用 M 表示</h5><ul><li>M：表示数字月份，1-12月，在个位数月份时会直接显示对应的数字，而不是在前方追加0</li><li>MM：表示两位数月份，01-12月，在个位数月份时会在前方追加占位用的0</li></ul><blockquote><p>不同位数的日期表示形式在显示的时候仅仅是有无添加相应的占位符，需注意的是在通过指定格式来解析日期字符串时，若待解析的日期字符串和指定解析格式位数不同，则会出现解析错误</p></blockquote><h5 id="日-day-使用-d-或者-d表示" tabindex="-1"><a class="header-anchor" href="#日-day-使用-d-或者-d表示" aria-hidden="true">#</a> 日（Day）：使用 D 或者 d表示</h5><ul><li>D：表示在当前年份中的天数，表示形式为：1-365天</li><li>DDD：表示在当前年份中的天数，表示形式为：001-365天，始终为三位数</li><li>d：表示当前月份中的天数，表示形式为：1-31天</li><li>dd：表示当前月份中的天数，表示形式为01-31天，通常使用此种方式表示天数</li></ul><h3 id="时间格式" tabindex="-1"><a class="header-anchor" href="#时间格式" aria-hidden="true">#</a> 时间格式</h3><h5 id="时-hour-使用-h-或者-h-表示" tabindex="-1"><a class="header-anchor" href="#时-hour-使用-h-或者-h-表示" aria-hidden="true">#</a> 时（Hour）：使用 H 或者 h 表示</h5><ul><li>H：表示24小时制，表示形式为：0-23时</li><li>HH：表示24小时制，表示形式为：00-23时，始终为两位数</li><li>h：表示12小时制，表示形式为：1-12时</li><li>hh：表示12小时制，表示形式为01-12时，始终为两位数，使用十二小时制，需要有时期标识（AM/PM）来表示上午和下午，这样才能够完整的显示当前时间</li></ul><h5 id="分-minute-使用-m-表示" tabindex="-1"><a class="header-anchor" href="#分-minute-使用-m-表示" aria-hidden="true">#</a> 分（Minute）：使用 m 表示</h5><ul><li>m：表示分钟，1-59分</li><li>mm：表示分钟，01-59分，始终为两位数</li></ul><h5 id="秒-seconds-使用-s-表示" tabindex="-1"><a class="header-anchor" href="#秒-seconds-使用-s-表示" aria-hidden="true">#</a> 秒（Seconds）：使用 s 表示</h5><ul><li>s：表示秒，1-59秒</li><li>ss：表示秒，01-59秒，始终为两位数</li></ul><h3 id="其他格式" tabindex="-1"><a class="header-anchor" href="#其他格式" aria-hidden="true">#</a> 其他格式</h3><h5 id="毫秒-milliseconds-使用-s-表示" tabindex="-1"><a class="header-anchor" href="#毫秒-milliseconds-使用-s-表示" aria-hidden="true">#</a> 毫秒（Milliseconds）：使用 S 表示</h5><ul><li>SSS：表示毫秒数，通常使用三位表示，形式为：000-999</li></ul><blockquote><p>含有毫秒的格式展示为：<code>yyyy-MM-dd HH:mm:ss.SSS</code> 使用 <code>.</code> 来作为秒和毫秒之间的分隔</p></blockquote><h5 id="时期-am-pm-使用-a-表示" tabindex="-1"><a class="header-anchor" href="#时期-am-pm-使用-a-表示" aria-hidden="true">#</a> 时期（AM/PM）：使用 a 表示</h5><ul><li>a：表示时期标识，展示形式为：AM（上午）/ PM（下午）</li></ul><blockquote><p>含有时期的表示形式可以为：<code>yyyy-MM-dd hh:mm:ss a</code> 时间和时期之间通过空格区分</p></blockquote><h5 id="时区-使用-z-或者-z-表示" tabindex="-1"><a class="header-anchor" href="#时区-使用-z-或者-z-表示" aria-hidden="true">#</a> 时区：使用 Z 或者 z 表示</h5><ul><li>Z：表示时区的偏移量、如+0800、-0500</li><li>z：表示时区的字符缩写，如：CST、GMT，以空格作为分隔符号，追加在最后方</li></ul><h5 id="周-week-使用-w-或者-w-表示" tabindex="-1"><a class="header-anchor" href="#周-week-使用-w-或者-w-表示" aria-hidden="true">#</a> 周（Week）：使用 W 或者 w 表示</h5><ul><li>W：表示当前月份中的周数，表示为：1-52/53周</li><li>w：表示当前年份中的周数，表示为：1-4周</li></ul><blockquote><p>以周为单位进行表示：<code>YYYY-ww E</code> ，以 - 作为分隔符，国内使用情况较少，E用来表示具体的星期几</p></blockquote><h3 id="应用案例" tabindex="-1"><a class="header-anchor" href="#应用案例" aria-hidden="true">#</a> 应用案例</h3><p>Java中较为常用的格式化类有许多，实现方式也相当多种方式</p><p>个人常用的有两种： <code>SimpleDateFormat</code>（适用于老版 Java）、<code>DateTimeFormatter</code>（推荐，支持Java 8+）</p><h5 id="simpledateformat-适用于老版-java" tabindex="-1"><a class="header-anchor" href="#simpledateformat-适用于老版-java" aria-hidden="true">#</a> <code>SimpleDateFormat</code>（适用于老版 Java）</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">SimpleDateFormat</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DateFormatExample</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SimpleDateFormat</span> sdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Date</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> formattedDate <span class="token operator">=</span> sdf<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>formattedDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="datetimeformatter-推荐-支持java-8" tabindex="-1"><a class="header-anchor" href="#datetimeformatter-推荐-支持java-8" aria-hidden="true">#</a> <code>DateTimeFormatter</code>（推荐，支持Java 8+）</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span>format<span class="token punctuation">.</span></span><span class="token class-name">DateTimeFormatter</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DateTimeFormatterExample</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DateTimeFormatter</span> formatter <span class="token operator">=</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">LocalDateTime</span> now <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> formattedDate <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>formatter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>formattedDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常用的格式" tabindex="-1"><a class="header-anchor" href="#常用的格式" aria-hidden="true">#</a> 常用的格式</h3><ol><li><strong>完整日期时间（24小时制）：</strong> <code>yyyy-MM-dd HH:mm:ss</code></li><li><strong>仅日期：</strong> <code>yyyy-MM-dd</code></li><li><strong>仅时间（24小时制）：</strong> <code>HH:mm:ss</code></li><li><strong>带时区的日期时间：</strong> <code>yyyy-MM-dd HH:mm:ss z</code></li></ol><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><p>在进行日期和时间格式的展示或解析时，应了解各个字符的含义以及不同大小写和数量的情况下对于最终的展示效果或者解析结果有着什么样的影响，根据具体业务需求选择正确的格式组合。</p><h3 id="通用的日期时间格式化字符含义" tabindex="-1"><a class="header-anchor" href="#通用的日期时间格式化字符含义" aria-hidden="true">#</a> <strong>通用的日期时间格式化字符含义</strong></h3><p>以下字符是通用的，适用于Java的日期时间类，如<code>SimpleDateFormat</code>、<code>DateTimeFormatter</code>等。</p><table><thead><tr><th>字符</th><th>含义</th><th>示例</th></tr></thead><tbody><tr><td><code>Y</code></td><td>周年</td><td><code>2025</code></td></tr><tr><td><code>y</code></td><td>日历年</td><td><code>2025</code></td></tr><tr><td><code>M</code></td><td>月（1-12）</td><td><code>1</code>, <code>12</code></td></tr><tr><td><code>d</code></td><td>日（1-31）</td><td><code>1</code>, <code>31</code></td></tr><tr><td><code>H</code></td><td>24小时制的小时</td><td><code>0</code>, <code>23</code></td></tr><tr><td><code>h</code></td><td>12小时制的小时</td><td><code>1</code>, <code>12</code></td></tr><tr><td><code>m</code></td><td>分钟（0-59）</td><td><code>0</code>, <code>59</code></td></tr><tr><td><code>s</code></td><td>秒（0-59）</td><td><code>0</code>, <code>59</code></td></tr><tr><td><code>S</code></td><td>毫秒</td><td><code>123</code></td></tr><tr><td><code>a</code></td><td>上午/下午标识</td><td><code>AM</code>, <code>PM</code></td></tr><tr><td><code>z</code></td><td>时区名称</td><td><code>PST</code>, <code>CST</code></td></tr><tr><td><code>Z</code></td><td>时区偏移量</td><td><code>+0800</code></td></tr></tbody></table>`,45),c=[o];function d(p,i){return n(),s("div",null,c)}const r=a(t,[["render",d],["__file","Java日期时间格式化的规则解析.html.vue"]]);export{r as default};
